# generated by datamodel-codegen:
#   filename:  <stdin>
#   timestamp: 2025-06-09T17:20:16+00:00

from __future__ import annotations

from datetime import date
from typing import Any, List, Optional

from pydantic import BaseModel, Field


class MetaModelFields(BaseModel):
    assignee: Any = Field(None, title='Assignee')
    attachment: Optional[List] = Field(None, title='Attachment')
    customfield_10001: Any = Field(None, title='Customfield 10001')
    customfield_10015: Optional[date] = Field(None, title='Customfield 10015')
    customfield_10017: Optional[str] = Field(None, title='Customfield 10017')
    customfield_10019: Any = Field(None, title='Customfield 10019')
    customfield_10021: Optional[List] = Field(None, title='Customfield 10021')
    customfield_10031: Any = Field(None, title='Customfield 10031')
    customfield_10034: Any = Field(None, title='Customfield 10034')
    customfield_10035: Optional[List] = Field(None, title='Customfield 10035')
    description: Optional[str] = Field(None, title='Description')
    duedate: Optional[date] = Field(None, title='Duedate')
    issuelinks: Optional[List] = Field(None, title='Issuelinks')
    issuetype: Any = Field(..., title='Issuetype')
    labels: Optional[List[str]] = Field(None, title='Labels')
    project: Any = Field(..., title='Project')
    reporter: Any = Field(..., title='Reporter')
    summary: str = Field(..., title='Summary')


class IssueModel(BaseModel):
    key: str = Field(..., title='Key')
    id: str = Field(..., title='Id')
    fields: MetaModelFields
