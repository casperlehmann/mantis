name: Tag Release After Version Bump

on:
  push:
    branches:
      - master

permissions:
  contents: write

jobs:
  tag:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check if last commit is a version bump
        id: should_tag
        run: |
          FILES_CHANGED=$(git show --pretty="" --name-only HEAD)
          COMMIT_MSG=$(git log -1 --pretty=%s)

          echo "Changed files:"
          echo "$FILES_CHANGED"
          echo "Commit message: $COMMIT_MSG"

          if echo "$FILES_CHANGED" | grep -qE '(^|/)(pyproject\.toml|uv\.lock)$' && \
             echo "$COMMIT_MSG" | grep -qE '^Bump version to v[0-9]+\.[0-9]+\.[0-9]+$'; then
            echo "✅ Detected version bump"
            echo "tag=yes" >> $GITHUB_OUTPUT
          else
            echo "ℹ️ Not a version bump, skipping tag"
            echo "tag=no" >> $GITHUB_OUTPUT
          fi

      - name: Extract version from pyproject.toml
        id: extract_version
        if: steps.should_tag.outputs.tag == 'yes'
        run: |
          version=$(grep -E '^version\s*=' pyproject.toml | sed -E "s/version\s*=\s*['\"]([^'\"]+)['\"]/v\1/")
          echo "version=$version"
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Create Git tag
        if: steps.should_tag.outputs.tag == 'yes'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -a ${{ steps.extract_version.outputs.version }} -m "Release ${{ steps.extract_version.outputs.version }}"
          git push origin ${{ steps.extract_version.outputs.version }}
